[tool.poetry]
name = "emma"
version = "0.2.0"
description = "Emma is an agent designed to help you interact with Infrahub."
authors = ["OpsMill <info@opsmill.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
streamlit = "^1.36.0"
infrahub-sdk = { version = "^0.11.1", extras = ["all"] }
watchdog = "^4.0.1"
langchain = "^0.2.6"
langchain-community = "^0.2.6"
openai = "^1.35.10"
langchain-openai = "^0.1.14"
langchain-huggingface = "^0.0.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.8"
mypy = "^1.10.0"
yamllint = "^1.35.1"
towncrier = "^23.11.0"


[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "raise NotImplementedError()"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
filterwarnings = ["ignore:pkg_resources is deprecated"]
addopts = "-vs"


[tool.mypy]
pretty = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "C90",   # mccabe
    "ASYNC", # flake8-async
    "DTZ",   # flake8-datetimez
    "E",     # style errors
    "F",     # flakes
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "TCH",   # flake8-type-checking
    "T10",   # flake8-debugger
    "PL",    # pylint
    "Q",     # flake8-quotes
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]


[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.per-file-ignores]


[tool.towncrier]
package = "emma"
directory = "emma/changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
title_format = "## [{version}](https://github.com/opsmill/emma/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/opsmill/emma/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
